import React, { useState } from "react";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Textarea } from "@/components/ui/textarea";
import { showLoading, dismissToast, showSuccess } from "@/utils/toast";
import { MadeWithDyad } from "@/components/made-with-dyad";

const RecipeMaker = () => {
  const [dishInput, setDishInput] = useState<string>("");
  const [generatedRecipe, setGeneratedRecipe] = useState<string>("");
  const [isLoading, setIsLoading] = useState<boolean>(false);

  const handleGenerateRecipe = () => {
    if (!dishInput.trim()) {
      setGeneratedRecipe("Please enter what you'd like to eat!");
      return;
    }

    setIsLoading(true);
    const loadingToastId = showLoading("Generating your recipe...");

    // Simulate an API call for recipe generation
    setTimeout(() => {
      const mockRecipe = `
Recipe for "${dishInput}":

Ingredients:
- 1 cup of ${dishInput.toLowerCase().includes("pasta") ? "pasta" : "main ingredient"}
- 2 cloves garlic, minced
- 1/2 onion, chopped
- 1 can (14.5 oz) diced tomatoes
- 1/4 cup fresh basil, chopped
- Salt and pepper to taste
- 2 tbsp olive oil

Instructions:
1. Heat olive oil in a large pan over medium heat. Add onion and garlic, saut√© until fragrant (about 2-3 minutes).
2. Add diced tomatoes and bring to a simmer. Cook for 10 minutes, stirring occasionally.
3. If using pasta, cook according to package directions.
4. Add your main ingredient (e.g., cooked chicken, vegetables, or pasta) to the sauce.
5. Stir in fresh basil, salt, and pepper.
6. Serve hot and enjoy your delicious "${dishInput}"!

Note: For a real application, this recipe would be generated by an AI or a database.
      `;
      setGeneratedRecipe(mockRecipe);
      dismissToast(loadingToastId);
      showSuccess("Recipe generated successfully!");
      setIsLoading(false);
    }, 2000); // Simulate a 2-second delay for generation
  };

  return (
    <div className="min-h-screen flex flex-col items-center justify-center bg-gray-100 dark:bg-gray-900 p-4">
      <Card className="w-full max-w-2xl shadow-lg rounded-lg bg-white dark:bg-gray-800">
        <CardHeader className="text-center">
          <CardTitle className="text-3xl font-bold text-gray-800 dark:text-gray-100">
            Kim's Quick Recipe Maker
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="space-y-2">
            <label htmlFor="dish-input" className="block text-lg font-medium text-gray-700 dark:text-gray-300">
              What do you want to eat?
            </label>
            <Input
              id="dish-input"
              type="text"
              placeholder="e.g., Chicken Curry, Vegan Tacos, Pasta Primavera"
              value={dishInput}
              onChange={(e) => setDishInput(e.target.value)}
              className="w-full p-3 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-gray-100"
              disabled={isLoading}
            />
          </div>
          <Button
            onClick={handleGenerateRecipe}
            className="w-full py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md transition-colors duration-200"
            disabled={isLoading}
          >
            {isLoading ? "Generating..." : "Generate Recipe"}
          </Button>

          {generatedRecipe && (
            <div className="space-y-2">
              <h2 className="text-xl font-semibold text-gray-800 dark:text-gray-100">Your Recipe:</h2>
              <Textarea
                value={generatedRecipe}
                readOnly
                className="w-full h-96 p-4 border border-gray-300 dark:border-gray-600 rounded-md bg-gray-50 dark:bg-gray-700 text-gray-800 dark:text-gray-100 resize-y"
              />
            </div>
          )}
        </CardContent>
      </Card>
      <MadeWithDyad />
    </div>
  );
};

export default RecipeMaker;